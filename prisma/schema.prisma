generator client {
  provider = "prisma-client-js"
  previewFeatures = ["aggregateApi"] 
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://prisma:prisma@127.0.0.1:5432/grading-app"
}

// TODO: define fields and relations
model User {
  id          Int                @id @default(autoincrement())
  email       String             @unique
  firstName   String
  lastName    String
  social      Json
  course      CourseEnrollment[]
  testResults TestResult[]       @relation(name: "results")
  testsGraded TestResult[]       @relation(name: "graded")
}

// TODO: define fields and relations
model Course {
  id            Int                @id @default(autoincrement())
  name          String             @unique
  courseDetails String
  members       CourseEnrollment[]
  tests         Test[]
}

// TODO: define fields and relations
model Test {
  id         Int          @id @default(autoincrement())
  updatedAt  DateTime     @updatedAt
  name       String
  date       DateTime
  courseId   Int
  course     Course       @relation(fields: [courseId], references: [id])
  testResult TestResult[]
}

// TODO: define fields and relations
model TestResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  result    Int
  testId    Int
  test      Test     @relation(fields: [testId], references: [id])
  studentId Int
  student   User     @relation(name: "results", fields: [studentId], references: [id])
  graderId  Int
  gradedBy  User     @relation(name: "graded", fields: [graderId], references: [id])
}

model CourseEnrollment {
  createdAt DateTime @default(now())
  role      UserRole
  userId    Int
  courseId  Int
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])

  @@id([userId, courseId])
}

enum UserRole {
  STUDENT
  TEACHER
}
